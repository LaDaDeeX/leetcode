# 题目

给定一个仅包含数字 2-9 的字符串，返回所有它能表示的字母组合。答案可以按 任意顺序 返回。

给出数字到字母的映射如下（与电话按键相同）。注意 1 不对应任何字母。



 ![img](https://assets.leetcode-cn.com/aliyun-lc-upload/uploads/2021/11/09/200px-telephone-keypad2svg.png)

示例 1：

输入：digits = "23"
输出：["ad","ae","af","bd","be","bf","cd","ce","cf"]

来源：力扣（LeetCode）
链接：https://leetcode.cn/problems/letter-combinations-of-a-phone-number
著作权归领扣网络所有。商业转载请联系官方授权，非商业转载请注明出处。

# 思路

1. dfs

# 代码

```java
class Solution {
    public List<String> letterCombinations(String digits) {
        List<String> ans = new ArrayList<>();
        if (digits == null || digits.length() == 0) {
            return ans;
        }
        Map<Character,String> map = new HashMap<>();
        map.put('2',"abc");
        map.put('3',"def");
        map.put('4',"ghi");
        map.put('5',"jkl");
        map.put('6',"mno");
        map.put('7',"pqrs");
        map.put('8',"tuv");
        map.put('9',"wxyz");
       
        dfs(digits,0,map,ans,"");
        return ans;
    }
    private void dfs(String digits,int startIndex,Map<Character,String> map,List<String> ans,String curLetterComb) {
        if (startIndex == digits.length()) {
            ans.add(curLetterComb);
            return;
        }
        char c = digits.charAt(startIndex);
        String s = map.get(c);
        for (char mapC : s.toCharArray()) {
            dfs(digits,startIndex + 1, map,ans,curLetterComb + mapC);
        }
        
    }
}
```

```go
func letterCombinations(digits string) []string {
	if len(digits) == 0 {
		return nil
	}
	numStringMap := map[byte] string{
		'2':"abc",
		'3':"def",
		'4':"ghi",
		'5':"jkl",
		'6':"mno",
		'7':"pqrs",
		'8':"tuv",
		'9':"wxyz",
	}
	var ans []string
	dfs(numStringMap,digits,0,"",&ans)
	return ans;
}

func dfs(numStringMap map[byte] string, digits string, startIndex int,curLetterComb string,ans *[]string) {
	if startIndex == len(digits) {
		*ans = append(*ans,curLetterComb)
		return
	}
	str := numStringMap[digits[startIndex]]
	for _,c := range str {
		dfs(numStringMap,digits,startIndex + 1, curLetterComb + string(c) ,ans)
	}
}
```



